{"version":3,"sources":["gameHelpers.js","components/styles/styled__stage.js","components/styles/styled__cell.js","tetrominos.js","components/cell.js","components/stage.js","components/styles/styled__display.js","components/display.js","components/styles/styled__start__button.js","components/startButton.js","hooks/useStage.js","hooks/useGameStatus.js","img/background.png","components/styles/styled__tetris.js","components/tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledStage","styled","div","props","height","width","StyledCell","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","Cell","React","memo","Stage","map","row","cell","StyledDisplay","gameOver","Display","text","gameover","StyledStartButton","button","StartButton","callback","onClick","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","acc","cur","findIndex","prev","unshift","push","sweepRows","StyledTetrisWrapper","bg__image","StyledTetris","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE__WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dade6d8.chunk.js","sourcesContent":["export const STAGE__WIDTH = 12;\r\nexport const STAGE__HEIGHT = 20;\r\n\r\n\r\n//Create stage array\r\nexport const createStage = () => \r\n  Array.from(Array(STAGE__HEIGHT), () =>\r\n    Array(STAGE__WIDTH).fill([0, 'clear'])\r\n  )\r\n\r\n// check collision - boolean return\r\n  export const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\r\n\r\n      for(let y = 0; y < player.tetromino.length; y+=1) {\r\n        for(let x = 0; x < player.tetromino[y].length; x+=1) {\r\n          if(player.tetromino[y][x] !== 0) {\r\n           if(!stage[y + player.pos.y + moveY] ||\r\n             !stage[y + player.pos.y + moveY][x + player.pos.x + moveX]\r\n             || stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear') {\r\n             return true;\r\n           }\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n  }\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StyledStage = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: repeat(${props => props.height}, calc(24vw / ${props => props.width}));\r\ngrid-template-columns: repeat(${props => props.width}, 1fr);\r\ngrid-gap: 1px;\r\nborder: 2px solid #EEFF05;\r\nwidth: 100%;\r\nmax-width: 25vw;\r\nbackground: #111;\r\nbox-shadow: 5px 5px 5px #111;\r\n`","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\nwidth: auto;\r\nbackground: rgba(${props => props.color}, 0.8);\r\nborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\nborder-bottom-color: rgba(${props => props.color}, 0.1);\r\nborder-right-color: rgba(${props => props.color}, 1);\r\nborder-top-color: rgba(${props => props.color}, 1);\r\nborder-left-color: rgba(${props => props.color}, 0.3);\r\n`","//Create tetromino shape and color\r\nexport const TETROMINOS = {\r\n  0: {shape: [[0]], color: '0,0,0'},\r\n  I: {shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]], color: '4, 188, 191'},\r\n  J: {shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '0, 46, 145'},\r\n  L: {shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']], color: '237, 174, 0'},\r\n  O: {shape: [['O', 'O'], ['O', 'O']], color: '170, 227, 57'},\r\n  S: {shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '20, 112, 25'},\r\n  T: {shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]], color: '99, 28, 166'},\r\n  Z: {shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '186, 30, 30'},\r\n}\r\n\r\n//Create func random shapes\r\n\r\nexport const randomTetromino = () => {\r\n\r\n  const tetrominos = 'IJLOSTZ';\r\n  const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n  return TETROMINOS[randTetromino];\r\n}","import React from 'react';\r\nimport { StyledCell } from './styles/styled__cell';\r\nimport {TETROMINOS} from '../tetrominos';\r\n\r\nconst Cell = ({type}) => (\r\n  <StyledCell type={type} color={TETROMINOS[type].color}/>\r\n\r\n)\r\n\r\nexport default React.memo(Cell);","import React from 'react';\r\nimport {StyledStage} from './styles/styled__stage';\r\nimport Cell from './cell';\r\n\r\nconst Stage = ({stage}) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n  </StyledStage>\r\n)\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 0 0 20px 0;\r\npadding: 20px;\r\nborder: 4px solid #EEFF05;\r\nmin-height: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\ncolor: ${props => props.gameOver ? 'FF0700' : '#999'};\r\nbackground: #000;\r\nfont-size: 0.8rem;\r\n`","import React from 'react';\r\nimport {StyledDisplay} from './styles/styled__display';\r\n\r\nconst Display = ({gameOver, text}) => (\r\n  <StyledDisplay gameover={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\nbox-sizing: border-box;\r\nmargin: 0 0 20px 0;\r\npadding: 20px;\r\nmin-height: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\nborder: none;\r\ncolor: #000;\r\nbackground: #EEFF05;\r\noutline: none;\r\ncursor: pointer;\r\nfont-size: 1.4rem;\r\nfont-weight: 700;\r\n`","import React from 'react';\r\nimport { StyledStartButton } from './styles/styled__start__button';\r\n\r\nconst StartButton = ({callback}) => (\r\n<StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n)\r\nexport default StartButton;","import {useState, useEffect} from 'react';\r\n\r\nimport {createStage} from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage => \r\n          newStage.reduce((acc, cur) => {\r\n            // if not clear cell\r\n            if(cur.findIndex(cell => cell[0] === 0) === -1) {\r\n              setRowsCleared(prev => prev + 1);\r\n              acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n              return acc;\r\n            }\r\n            acc.push(cur);\r\n            return acc;\r\n          }, []);\r\n\r\n          // update stage after tetromino move and stop\r\n    const updateStage = prevStage => {\r\n\r\n      const newStage = prevStage.map(row => row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)))\r\n      \r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value,x) => {\r\n          if(value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n               `${player.collided ? 'merged' : 'clear'}`\r\n              ]\r\n          } \r\n        })\r\n      })\r\n\r\n      if(player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n        return newStage;\r\n }  \r\n\r\n setStage(prev => updateStage(prev))\r\n}, [ player.collided,\r\n    player.pos.x,\r\n    player.pos.y,\r\n    player.tetromino,\r\n    resetPlayer,])\r\n\r\n\r\n\r\n\r\n  return [stage, setStage, rowsCleared];\r\n}","import {useState, useEffect, useCallback} from 'react';\r\n\r\nexport const useGameStatus = (rowsCleared) => {\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n// array points \r\n  const linePoints = [40, 100, 300, 1200];\r\n  \r\n// calc score\r\n  const calcScore = useCallback(() => {\r\n    if(rowsCleared > 0) {\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level+1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared])\r\n\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel]\r\n\r\n\r\n\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/background.0ee1659d.png\";","import styled from 'styled-components';\r\n\r\nimport bg__image from '../../img/background.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\nwidth: 100vw;\r\nheight: 100vh;\r\nbackground: url(${bg__image}) rgba(0,0,0,0.6);\r\nbackground-blend-mode: darken;\r\nbackground-size: contain;\r\noverflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\ndisplay: flex;\r\nalign-items: flex-start;\r\nmax-width: 900px;\r\npadding: 40px;\r\nmargin: 0 auto;\r\n\r\naside {\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 200px;\r\n  padding: 0 20px;\r\n}\r\n`","import React, {useState} from 'react';\r\n\r\nimport {createStage, checkCollision} from '../gameHelpers';\r\n//--import Components start--\r\nimport Stage from './stage';\r\nimport Display from './display';\r\nimport StartButton from './startButton';\r\n//--import Components over--\r\n//import custom hooks\r\nimport {usePlayer} from '../hooks/usePlayer';\r\nimport {useStage} from '../hooks/useStage';\r\nimport {useInterval} from '../hooks/useInterval';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n//import style components\r\nimport {StyledTetrisWrapper, StyledTetris} from './styles/styled__tetris';\r\n\r\nconst Tetris = () => {\r\n\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const  [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n\r\n  const movePlayer = dir => {\r\n    if(!checkCollision(player, stage, {x: dir, y: 0})) { \r\n      updatePlayerPos({x: dir, y: 0})\r\n    }\r\n    \r\n  }\r\n  const startGame = () => {\r\n   setStage(createStage());\r\n   setDropTime(1000);\r\n   resetPlayer();\r\n   setGameOver(false);\r\n   setScore(0);\r\n   setRows(0);\r\n   setLevel(0);\r\n  }\r\n\r\n  const drop = () => {\r\n\r\n    if(rows > (level + 1) * 10) {\r\n      setLevel(prev => prev + 1);\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n     if(!checkCollision(player, stage, {x: 0, y: 1})) {\r\n       updatePlayerPos({x: 0, y: 1, collided: false});\r\n     } else {\r\n       if(player.pos.y < 1 ) {\r\n         setGameOver(true);\r\n         setDropTime(null);\r\n       }\r\n       updatePlayerPos({x: 0, y: 0, collided: true})\r\n     }\r\n  }\r\n  const dropPlayer = () => {\r\n    setDropTime(null);\r\n    drop();\r\n  }\r\n  const move = ({keyCode}) => {\r\n    if(!gameOver) {\r\n      if(keyCode === 37){\r\n        movePlayer(-1);\r\n      } else if(keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if(keyCode === 40) {\r\n        dropPlayer();\r\n      } else if(keyCode === 38) {\r\n        playerRotate(stage, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const keyUp = ({keyCode}) => {\r\n    if(!gameOver) {\r\n      if(keyCode === 40) {\r\n        setDropTime(1000 / (level + 1) + 200);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useInterval(() => {\r\n    drop()\r\n  }, dropTime)\r\n \r\n\r\n  return (\r\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp} > \r\n      <StyledTetris>\r\n      <Stage stage={stage}/>\r\n      <aside>\r\n        {gameOver ? (<Display gameOver={gameOver} text=\"Game over\"/>) : (\r\n          <div>\r\n        <Display text={`Score: ${score}`}/>\r\n        <Display text={`Rows: ${rows}`}/>\r\n        <Display text={`Level: ${level}`}/>\r\n        </div>\r\n        )}\r\n        \r\n        <StartButton callback={startGame}/>\r\n      </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  )\r\n}\r\n\r\nexport default Tetris;","import {useCallback, useState} from 'react';\r\nimport { checkCollision, STAGE__WIDTH } from '../gameHelpers';\r\n\r\nimport {TETROMINOS, randomTetromino} from './../tetrominos';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: {x: 0, y: 0},\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n// func rotate tetromino\r\n  const rotate = (matrix, dir) => {\r\n\r\n    const rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]));\r\n    if(dir > 0) {\r\n      return rotatedTetro.map(row => row.reverse())\r\n    }\r\n    return rotatedTetro.reverse();\r\n  }\r\n\r\n  const playerRotate = (stage, dir) => {\r\n\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n\r\n    while(checkCollision(clonedPlayer, stage, {x: 0, y: 0})) {\r\n\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if(offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n\r\n// move teromino\r\nconst updatePlayerPos = ({x,y,collided}) => {\r\n\r\n  setPlayer(prev => ({\r\n    ...prev,\r\n    pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n    collided,\r\n  }))\r\n\r\n}\r\n\r\n// new tetromino\r\nconst resetPlayer = useCallback(() => {\r\n  setPlayer({\r\n    pos: {x: STAGE__WIDTH / 2 - 2, y: 0},\r\n    tetromino: randomTetromino().shape,\r\n    collided: false\r\n  })\r\n}, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n\r\n}","import {\r\n  useEffect,\r\n  useRef\r\n} from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}","import React from 'react';\nimport Tetris from './components/tetris.js';\n\n\nconst App = () => (\n  <div className=\"app\">\n    <Tetris/>\n  </div>\n\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}